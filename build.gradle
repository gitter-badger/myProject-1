group 'com.sainsburys'
version '1.0'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

archivesBaseName = 'sainsbury-product-scrapper'

mainClassName = "com.sainsburys.productscrapper.Application"

sourceSets {
    integrationTest {
        java {
            srcDir file('src/integrationTest/java')
        }
        resources {
            srcDir file('src/integrationTest/resources')
        }
    }
}

project.ext {
    springBootVersion = '1.3.5.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter:' + springBootVersion,
            'org.apache.commons:commons-lang3:3.2.1',
            'org.jsoup:jsoup:1.9.1',
            'com.fasterxml.jackson.core:jackson-core:2.7.4',
            'com.fasterxml.jackson.core:jackson-databind:2.7.4'

    testCompile 'junit:junit:4.12',
            'org.mockito:mockito-core:1.10.19',
            'org.assertj:assertj-core:3.4.1',
            'org.springframework.boot:spring-boot-starter-test:1.3.5.RELEASE',
            'net.javacrumbs.json-unit:json-unit:1.12.1',
            'net.javacrumbs.json-unit:json-unit-fluent:1.9.0'
}

checkstyle {
    toolVersion = "6.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

jacoco {
    toolVersion = "0.7.5.201505241946"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect { fileTree(dir: it, exclude: ['**/*Constants**']) })
    }
}

task checkstyle(dependsOn: [checkstyleMain, checkstyleTest])

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'sainsbury-web-scrapper',
                'Implementation-Version': version,
                'Main-Class': 'com.sainsburys.productscrapper.Application'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
